package pt.clubedohardware.userinterface;

import java.awt.event.*;
import javax.swing.Timer;

import pt.clubedohardware.userinterface.IAnimation;

public class Animation extends javax.swing.JFrame implements IAnimation{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	//private ActionListener TimerExpired;

    /**
     * Creates new form Animation
     */
    public Animation() {
        initComponents();
        estado = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton(new javax.swing.ImageIcon("src/pt/componentes/userinterface/Untitled.jpg"));
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setSize(new java.awt.Dimension(768, 600));

        jButton2.setIcon(new javax.swing.ImageIcon("src/pt/componentes/userinterface/Untitled.jpg"));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        /*
        if (estado == -1){
            jLabel1.setIcon(new javax.swing.ImageIcon("src/main/java/pt/userinterface/Webp.net-resizeimage.jpg"));
            jButton2.setIcon(new javax.swing.ImageIcon("src/main/java/pt/userinterface/Untitled.jpg"));
        }
        */
        //jLabel1.setIcon(new javax.swing.ImageIcon("src/pt/componentes/userinterface/Webp.net-resizeimage.jpg"));
        //jButton2.setIcon(new javax.swing.ImageIcon("src/pt/componentes/userinterface/Untitled.jpg"));
    	jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("Webp.net-resizeimage.jpg")));
    	jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("Untitled.jpg")));
    	estado++;
        if (estado >= max)
            dispose();
        else
            writingOn(falas[estado],personagem[estado]);
        //repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Animation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Animation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Animation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Animation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Animation().setVisible(true);
            }
        });
    }
    
    @Override
    public void setWindowName(String name){
        setTitle(name);
    }
    
    @Override
    public void setTempo(String v){
        if (v.equalsIgnoreCase("fast"))
            tempo = 200;
        else if (v.equalsIgnoreCase("slow"))
            tempo = 50;
        else 
            tempo = 100;
    }
    
    @Override
    public void setDocName(String docName){
        this.docName = docName;
    }
    
    @Override
    public void setPacientName(String pacName){
        this.pacName = pacName;
    }
    
    
    private void writingOn(String fala, String nome){
        if (fala.equals("x897422dsgbvc41") && nome.equals("fdcb414bv")){
            jTextPane1.setText("Aperte o botao <b>Comecar</b> para iniciar a animacao...");
        }
        else{
            String saida = "";
            int i, tamanho = 0;
            String[] palavras = fala.split(" ");
            for (i = 0; i < palavras.length; i++){
                tamanho += palavras[i].length();
                if(tamanho >= MAX_LINHA){
                    tamanho = palavras[i].length();
                    saida += "\n";
                }
                tamanho += 1;
                saida += (palavras[i] + " ");
            }
            if (nome.equalsIgnoreCase("doctor"))
                nome = "<font color = 9b9b9b><b>" + docName + "</b></font>";
            else if(nome.equalsIgnoreCase("pacient"))
                nome = "<font color = 9b9b9b><b>" + pacName + "</b></font>";
            textinho = saida;
            novo = nome + "<br>";
            aux = 0;
            cronometro = new Timer(tempo, new ActionListener(){

            @Override   
            public void actionPerformed(ActionEvent e){

                jTextPane1.setText("<font size = 6>" + novo + complement + "</font>");
                if (textinho.charAt(aux) == star){
                    if(complement.equals("")){
                        complement = "</b>";
                        novo += "<b>";
                    }
                    else{
                        complement = "";
                        novo += "</b>";
                    }
                }

                else
                    novo += String.valueOf(textinho.charAt(aux));
                aux++;
                if (aux >= textinho.length()){
                    cronometro.stop();
                }
            }
            });
            cronometro.start();
        }
    }
        
    public void story(String[] falas, String[] personagem){
        this.falas = falas;
        this.personagem = personagem;
        max = falas.length;
        //jLabel1.setIcon(new javax.swing.ImageIcon("src/main/java/pt/userinterface/Webp.net-resizeimage.jpg"));
        jTextPane1.setContentType("text/html");
        //jLabel1.setIcon(new javax.swing.ImageIcon("src/pt/componentes/userinterface/abertura2.jpeg"));
        //writingOn(falas[estado],personagem[estado]);
        //jButton2.setIcon(new javax.swing.ImageIcon("src/pt/componentes/userinterface/index.jpeg")); 
        
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("abertura2.jpeg")));
    	jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("index.jpeg")));
        writingOn("x897422dsgbvc41","fdcb414bv");
        setVisible(true);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    private int estado = -1;
    private int max;
    private String[] falas;
    private String[] personagem;
    private static int MAX_LINHA = 50;
    private String textinho;
    private int aux = 0;
    private javax.swing.Timer cronometro;
    private String novo;
    private int tempo= 100;
    private String docName = "Doctor";
    private String pacName = "Pacient";
    //private boolean complete = false;
    private String complement = "";
    private char star = '*';

}
